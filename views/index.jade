include includes/header.jade
include includes/banner.jade
#wrapper
    //----------------------
    //-LOGO AND BASELINE
    //----------------------
    .presentation-header
        .presentation-img
        .bigimage
            img(src='img/logos/bjs-logo.png')
        h1.bjs-moto An open source 3D engine based on webGL and Javascript
    //----------------------
    //-THREE COLUMNS
    //----------------------
    .bjs-components
        .bjs-component
            h1 Lights, Camera, Action
            p
                | This phrase can be applied to making 3D games as well as making movies.
                | Of course as well as lights and cameras for your scene you also need
                | locations, sets, props and actors before any action can take place.
                | 
                | BabylonJS can provide all this for you. Learn a little about BJS and 
                | then all you need is imagination and a knowledge of Javascript and very soon 
                | you can have a scene up and running. One light and a camera is all you need 
                | to see your scene. Start with building simple props, join them to form
                | a set add an actor and you're off.
        .bjs-component
            h1 Some 3D Jargon is Needed.
            p
                | To drive your 3D game forward you will need a <i>3D engine</i>, in this case BabylonJS. 
                | Then everything you do is set inside a <i>scene</i> including the <i>lights</i> and <i>camera</i>. 
                | Props and locations are built from <i>meshes</i> which are constructions using points and lines. 
                | The beauty of BJS is that many many useful meshes are built very simply using one instruction. 
                | Meshes can be animated as well. Want an actor in your scene then build a character from <i>bones</i> 
                | and <i>skeletons</i>. Like to colour your meshes or wrap them in images then form a <i>material</i> 
                | and give it a colour or <i>texture</i> from an image and apply it to your mesh. Need natural reactions 
                | between objects in your scene then add in a <i>physics engine</i>. Don't want to do all the coding to
                | make your meshes and characters then there are 3D Creation Packages that can be used as designers and 
                | then as <i>exporters</i> of files that can be <i>loaded</i> in BJS. 
        .bjs-component
            h1 Want to Get Started?
            p
                | Have a go at playing with this scne in the playground. For your own projects download the latest version of <a href="https://github.com/BabylonJS/Babylon.js">BabylonJS</a>
                | and follow the first steps guide.
       
    // HIGHLIGHT JS
    script(src='https://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.6/highlight.min.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.6/languages/javascript.min.js')
    script.
        hljs.initHighlightingOnLoad();
    script.
        var selectedLanguage = 'js';
        
        document.getElementById('js-start').addEventListener('click', function() {
            selectedLanguage = 'js';
            
            var hiddenElements = document.getElementsByClassName('ts');
            var visibleElements = document.getElementsByClassName('js');
            
            for (var i = 0; i < hiddenElements.length; i++) {
                hiddenElements[i].style.display = 'none';
            }
            for (var i = 0; i < visibleElements.length; i++) {
                visibleElements[i].style.display = '';
            }
            
            document.getElementById('js-start').className += ' toggle-selected';
            document.getElementById('ts-start').className = document.getElementById('ts-start').className.replace(/\btoggle-selected\b/g,'');
        });
        
        document.getElementById('ts-start').addEventListener('click', function() {
            selectedLanguage = 'ts';
            
            var hiddenElements = document.getElementsByClassName('js');
            var visibleElements = document.getElementsByClassName('ts');
            
            for (var i = 0; i < hiddenElements.length; i++) {
                hiddenElements[i].style.display = 'none';
            }
            for (var i = 0; i < visibleElements.length; i++) {
                visibleElements[i].style.display = '';
            }
            
            document.getElementById('js-start').className = document.getElementById('js-start').className.replace(/\btoggle-selected\b/g,'');
            document.getElementById('ts-start').className += ' toggle-selected';
        });
        
        var hiddenElements = document.getElementsByClassName('ts');
        var visibleElements = document.getElementsByClassName('js');
        
        for (var i = 0; i < hiddenElements.length; i++) {
            hiddenElements[i].style.display = 'none';
        }
        for (var i = 0; i < visibleElements.length; i++) {
            visibleElements[i].style.display = '';
        }
        
        document.getElementById('js-start').className += ' toggle-selected';
        document.getElementById('ts-start').className = document.getElementById('ts-start').className.replace(/\btoggle-selected\b/g,'');
    style.
        .selection-toggles {
            text-align: center;
        }
        .selection-toggle {
            background-color: #f8eec7;
            color: #ffffff;
            font-size: 20px;
            padding: 10px 20px 10px 20px;
            text-decoration: none;
            border: none;
        }
        .toggle-selected {
            background-color: #fc4349;
        }

include includes/footer.jade
